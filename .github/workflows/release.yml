name: TagToRelease
on:
  push:
    tags:
      - '*'
jobs:
  build:
    name: Process
    runs-on: ubuntu-latest
    steps:
      # setup PHP action
      # https://github.com/marketplace/actions/setup-php-action
      - name: Setup PHP Action
        uses: shivammathur/setup-php@2.17.1
        with:
          php-version: '7.2'
          tools: composer

      # parse vx.x.x from the tag ref to be used later
      # https://github.community/t/how-to-get-just-the-tag-name/16241/5
      - name: Get version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      # checkout the code, defaults to correct tags etc. automatically
      # https://github.com/actions/checkout
      - name: Checkout
        uses: actions/checkout@v1

      # create zip package (note, vendor folder is currently only used for testing. Don't include it in the release)
      - name: Create zip package
        run: |
          mkdir -p release/maksuturva
          rsync -arv --exclude='release' --exclude='.git/' --exclude='.github/' --exclude='.vendor/' --exclude='.gitignore' . ./release/maksuturva/
          cd release
          zip -r ${{ steps.get_version.outputs.VERSION }}-maksuturva.zip maksuturva/
          ls -alrt

      # create new release
      # https://github.com/actions/create-release
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false

      # upload the zip package to the release
      # https://github.com/actions/upload-release-asset
      - name: Upload asset to release
        id: upload_asset_to_release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which includes a `upload_url`.
          # See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/${{ steps.get_version.outputs.VERSION }}-maksuturva.zip
          asset_name: ${{ steps.get_version.outputs.VERSION }}-maksuturva.zip
          asset_content_type: application/zip